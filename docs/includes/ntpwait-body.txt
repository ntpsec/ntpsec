== SYNOPSIS ==

+ntpwait+ [+-v+] [+-n+ 'number'] [+-s+ 'secs']

== DESCRIPTION ==

The +ntpwait+ program blocks until ntpd is in synchronized state. This
can be useful at boot time, to delay the boot sequence until after "ntpd
-g" has set the time.

+ntpwait+ will send at most _number_ queries to {ntpdman}, sleeping
for _secs_ seconds after each status return that says {ntpdman} has not
yet produced a synchronized and stable system clock.

+ntpwait+ will do this quietly, unless the +-v+ flag is provided.

== OPTIONS ==

+-n+ _number_, +--tries+=_number_::
  Number of times to check ntpd. This option takes an integer number as
  its argument. The default _number_ for this option is: 100.
+
The maximum number of times we will check _ntpd_ to see if it has been
able to synchronize and stabilize the system clock.

+-q+, +--quick+::
  By default, +ntpwait+ waits for a full synchronization. With this
  option, +ntpwait+ only waits for the initial clock step to occur
  (or, without "ntp -g", for slewing to begin).

+-s+ _secs-between-tries_, +--sleep+=_secs-between-tries_::
  How long to sleep between tries. This option takes an integer number
  as its argument. The default _secs-between-tries_ for this option
  is: 6.
+
We will sleep for _secs-between-tries_ after each query of _ntpd_ that
returns "the time is not yet stable".

+-v+, +--verbose+::
  Be verbose.
+
By default, +ntpwait+ is silent. With this option, +ntpwait+ will
provide status information, including time to synchronization in seconds.

== BUGS ==

If you are running Python at a version older than 3.3, the report on time
to synchronization may be thrown off by NTP clock stepping.

//end 
